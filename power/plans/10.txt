BEGIN;
BEGIN
EXPLAIN
select
	c_custkey,
	c_name,
	sum(l_extendedprice * (1 - l_discount)) as revenue,
	c_acctbal,
	n_name,
	c_address,
	c_phone,
	c_comment
from
	customer,
	orders,
	lineitem,
	nation
where
	c_custkey = o_custkey
	and l_orderkey = o_orderkey
	and o_orderdate >= date '1994-11-01'
	and o_orderdate < cast(date '1994-11-01' + interval '3 month' as date)
	and l_returnflag = 'R'
	and c_nationkey = n_nationkey
group by
	c_custkey,
	c_name,
	c_acctbal,
	c_phone,
	n_name,
	c_address,
	c_comment
order by
	revenue desc
LIMIT 20;
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1933097.57..1933097.62 rows=20 width=175)
   ->  Sort  (cost=1933097.57..1934425.93 rows=531345 width=175)
         Sort Key: (sum((sum((lineitem.l_extendedprice * ('1'::double precision - lineitem.l_discount)))))) DESC
         ->  GroupAggregate  (cost=388902.69..1918958.67 rows=531345 width=175)
               Group Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
               ->  Remote Subquery Scan on all (datanode_1_1,datanode_2_1)  (cost=388902.69..1900361.59 rows=531345 width=175)
                     ->  GroupAggregate  (cost=388902.69..1900361.59 rows=531345 width=175)
                           Group Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                           ->  Sort  (cost=1996296.11..1997624.48 rows=531345 width=175)
                                 Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                                 ->  Hash Join  (cost=388902.69..1900361.59 rows=531345 width=175)
                                       Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                       ->  Hash Join  (cost=388901.13..1893054.04 rows=531345 width=153)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Hash Join  (cost=287647.13..1745777.38 rows=574442 width=12)
                                                   Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                                   ->  Bitmap Heap Scan on lineitem  (cost=3700.77..1253957.95 rows=14786574 width=12)
                                                         Recheck Cond: (l_returnflag = 'R'::bpchar)
                                                         ->  Bitmap Index Scan on lineitem_l_orderkey_idx_l_returnflag  (cost=0.00..4.13 rows=14786574 width=0)
                                                   ->  Hash  (cost=274385.19..274385.19 rows=582733 width=8)
                                                         ->  Bitmap Heap Scan on orders  (cost=12369.20..274385.19 rows=582733 width=8)
                                                               Recheck Cond: ((o_orderdate >= '1994-11-01'::date) AND (o_orderdate < '1995-02-01'::date))
                                                               ->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..12223.51 rows=582733 width=0)
                                                                     Index Cond: ((o_orderdate >= '1994-11-01'::date) AND (o_orderdate < '1995-02-01'::date))
                                             ->  Hash  (cost=50277.00..50277.00 rows=1500000 width=145)
                                                   ->  Seq Scan on customer  (cost=0.00..50277.00 rows=1500000 width=145)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(28 rows)

COMMIT;
COMMIT
