BEGIN;
BEGIN
EXPLAIN
select
	sum(l_extendedprice) / 7.0 as avg_yearly
from
	lineitem,
	part
where
	p_partkey = l_partkey
	and p_brand = 'Brand#25'
	and p_container = 'LG CAN'
	and l_quantity < (
		select
			0.2 * avg(l_quantity)
		from
			lineitem
		where
			l_partkey = p_partkey
	);
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=384490.77..384490.79 rows=1 width=4)
   ->  Remote Subquery Scan on all (datanode_1_1,datanode_2_1)  (cost=133.21..384438.79 rows=20795 width=4)
         ->  Aggregate  (cost=133.21..384438.79 rows=1 width=4)
               ->  Nested Loop  (cost=133.21..384438.79 rows=20795 width=4)
                     ->  Index Only Scan using part_p_container_p_brand_p_partkey_idx on part  (cost=0.18..8200.66 rows=2080 width=4)
                           Index Cond: ((p_container = 'LG CAN'::bpchar) AND (p_brand = 'Brand#25'::bpchar))
                     ->  Materialize  (cost=233.03..280.99 rows=11 width=12)
                           ->  Remote Subquery Scan on all (datanode_1_1,datanode_2_1)  (cost=233.03..280.96 rows=11 width=12)
                                 Distribute results by H: l_partkey
                                 ->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=133.03..180.77 rows=11 width=12)
                                       Index Cond: ((l_partkey = part.p_partkey) AND (l_quantity < (SubPlan 1)))
                                       SubPlan 1
                                         ->  Aggregate  (cost=132.83..132.84 rows=1 width=4)
                                               ->  Remote Subquery Scan on all (datanode_1_1,datanode_2_1)  (cost=0.19..132.75 rows=32 width=4)
                                                     ->  Aggregate  (cost=0.19..132.75 rows=1 width=4)
                                                           ->  Index Only Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem lineitem_1  (cost=0.19..132.75 rows=32 width=4)
                                                                 Index Cond: (l_partkey = part.p_partkey)
(17 rows)

COMMIT;
COMMIT
